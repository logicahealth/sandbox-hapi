server:
  localhost: http://localhost:${server.port}
  port: ${API_PORT:8078}
  tomcat:
    remote_ip_header: x-forwarded-for
    protocol_header: x-forwarded-proto
    maxswallowsize:
      inmb: -1

spring:
  application:
    name: HSPC Reference API
  profiles:
    active: multitenant,dstu2
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


hibernate:
  search:
    default:
      indexBase: target/@artifact.name@/lucenefiles

logging:
  level:
    org.springframework.security: INFO

# Platform Servers
hspc:
  platform:
    api:
      security:
        # determines if security is applied at the contextPath
        mode: secured
#        mode: mock
#        mode: open
      oauth2:
        clientId: hspc_resource_server
        clientSecret: secret
        scopes: openid,launch,smart/orchestrate_launch
      sandbox:
        name: ${SANDBOX_NAME:hspc8}
      sandboxManagerApi:
        url: http://${SBMA_HOST:localhost}:${SBMA_PORT:12000}
        transactionPath: /analytics/transaction
        userAuthPath: /user/authorize
        profilePath: /fhir-profile/save
      fhir:
        datasource:
          schema: hspc_8_${hspc.platform.api.sandbox.name}
#          driverClassName: com.mysql.cj.jdbc.Driver
          host: ${DB_HOST:localhost}
          url: jdbc:mysql://${hspc.platform.api.fhir.datasource.host}:${DB_PORT:3306}/${hspc.platform.api.fhir.datasource.schema}
          username: ${DB_USER:root}
          password: ${DB_PASSWORD:password}
          emptySchemaScriptPattern: db/mysql/hspc_%s_schema_empty.sql
          starterSchemaScriptPattern: db/mysql/hspc_%s_%s_%s_dataset.sql
          # Comma-separated list of scripts to run in order
          initializationScripts: db/mysql/V1__convert_hapi_3.2.0_to_3.3.0.sql
          cache:
            size: 10
        defaultTenantId: ${hspc.platform.api.sandbox.name}
        templateSandboxes: MasterDstu2Empty, MasterDstu2Smart, MasterStu3Empty, MasterStu3Smart, MasterR4Empty, MasterR4Smart
        hibernate:
          dialect: org.hibernate.dialect.MySQL5Dialect
        terminology:
          proxy:
            host: api-v8-stu3.hspconsortium.org/${hspc.platform.api.sandbox.name}
            contextPath: /open
        contextPath: data
        # remove openContextPath to disable the open endpoint
        openContextPath: open
        profileResources: StructureDefinition, CodeSystem, ValueSet, SearchParameter
    # these values are used for internal calls to the auth server
    authorization:
      protocol: http
      host: ${AUTH_HOST:localhost}
      port: ${AUTH_PORT:8060}
      context: ~
      url: ${hspc.platform.authorization.protocol}://${hspc.platform.authorization.host}:${hspc.platform.authorization.port}${hspc.platform.authorization.context}
      authorizeUrlPath: /authorize
      tokenUrlPath: /token
      tokenCheckUrlPath: /introspect
      userinfoUrlPath: /userinfo
      smart:
        launchUrlPath: /Launch
        registrationEndpointUrlPath: /register
        urisEndpointExtensionUrl: http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris
        launchRegistrationUrl: /${hspc.platform.api.fhir.contextPath}/_services/smart/Launch
    # the manifest output should contain these values (used to allow the API to publish different auth URL than it resolves locally, ie, Docker container)
    manifest:
      override: ${MANIFEST_OVERRIDE:false}
      protocol: http
      host: ${PUBLISHED_AUTH_HOST:}
      port: ${PUBLISHED_AUTH_PORT:}
      context: ~
      url: ${hspc.platform.manifest.protocol}://${hspc.platform.manifest.host}:${hspc.platform.manifest.port}${hspc.platform.manifest.context}
    messaging:
      pubsub:
        enabled: false
        forSandboxes:
        subscription:
          channel:
            endpoint:
        includeSourceQueryParameter: true

---

spring:
  profiles: dstu2

hspc:
  platform:
    api:
      sandbox:
        name: ${SANDBOX_NAME:hspc8}
server:
  port: ${API_PORT:8078}

---

spring:
  profiles: stu3

hspc:
  platform:
    api:
      sandbox:
        name: ${SANDBOX_NAME:hspc9}
server:
  port: ${API_PORT:8079}

---

spring:
  profiles: r4

hspc:
  platform:
    api:
      sandbox:
        name: ${SANDBOX_NAME:hspc10}
server:
  port: ${API_PORT:8070}

---

smart-configuration-metadata:
  authorization_endpoint: ${hspc.platform.authorization.url}/authorize
  token_endpoint: ${hspc.platform.authorization.url}/token
  token_endpoint_auth_methods_supported: ["client_secret_basic"]
  registration_endpoint: ${hspc.platform.authorization.url}/register
  scopes_supported: ["smart/orchestrate_launch", "launch", "openid", "profile", "user/*.*","user/*.read","user/*.write","user/AdverseReaction.read","user/AdverseReaction.write",
                     "user/Alert.read", "user/Alert.write", "user/Condition.read", "user/Condition.write", "user/Encounter.read", "user/Encounter.write", "user/FamilyHistory.read",
                     "user/FamilyHistory.write", "user/Medication.read", "user/Medication.write", "user/MedicationPrescription.read", "user/MedicationPrescription.write",
                     "user/MedicationStatement.read", "user/MedicationStatement.write", "user/Observation.read", "user/Observation.write", "user/Patient.read",
                     "user/Patient.write", "user/Substance.read", "user/Substance.write", "patient/*.*", "patient/*.read", "patient/*.write", "patient/AdverseReaction.read",
                     "patient/AdverseReaction.write", "patient/Alert.read", "patient/Alert.write", "patient/Condition.read", "patient/Condition.write", "patient/Encounter.read",
                     "patient/Encounter.write", "patient/FamilyHistory.read", "patient/FamilyHistory.write", "patient/MedicationPrescription.read", "patient/MedicationPrescription.write",
                     "patient/MedicationStatement.read", "patient/MedicationStatement.write", "patient/Observation.read", "patient/Observation.write", "patient/Patient.read",
                     "patient/Patient.write", "system/*.read", "system/*.write", "launch/patient", "launch/encounter", "launch/location", "patient/AllergyIntolerance.read",
                     "patient/AllergyIntolerance.write", "user/AllergyIntolerance.read", "user/AllergyIntolerance.write", "patient/DocumentReference.read", "patient/DocumentReference.write",
                     "online_access", "user/Immunization.read", "user/Immunization.write", "user/MedicationOrder.read", "user/MedicationOrder.write", "patient/Immunization.read",
                     "patient/Immunization.write", "patient/MedicationOrder.read", "patient/MedicationOrder.write", "offline_access","fhirUser"]
  response_types_supported: ["code"]
  management_endpoint: ${hspc.platform.authorization.url}/manage
  introspection_endpoint: ${hspc.platform.authorization.url}/introspect
  revocation_endpoint: ${hspc.platform.authorization.url}/revoke
  capabilities: ["launch-ehr", "client-public", "client-confidential-symmetric", "context-ehr-patient", "sso-openid-connect", "launch-standalone"]

