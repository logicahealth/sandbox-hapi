server:
  port: ${API_PORT:8075}
  tomcat:
    remote_ip_header: x-forwarded-for
    protocol_header: x-forwarded-proto

spring:
  application:
    name: HSPC Reference API
  profiles:
    active: multitenant,dstu2
  main:
    allow-bean-definition-overriding: true


hibernate:
  search:
    default:
      indexBase: target/@artifact.name@/lucenefiles

logging:
  level:
    org.springframework.security: INFO

# Platform Servers
hspc:
  platform:
    api:
      security:
        # determines if security is applied at the contextPath
        mode: secured
#        mode: mock
#        mode: open
      oauth2:
        clientId: hspc_resource_server
        clientSecret: secret
        scopes: openid,launch,smart/orchestrate_launch
      sandbox:
        name: ${SANDBOX_NAME:hspc5}
      sandboxManagerApi:
        url: http://${SBMA_HOST:localhost}:${SBMA_PORT:12000}
        transactionPath: /analytics/transaction
        userAuthPath: /user/authorize
      fhir:
        db:
          schema: hspc_5_${hspc.platform.api.sandbox.name}
          driver-class-name: com.mysql.jdbc.Driver
          host: ${DB_HOST:localhost}
          url: jdbc:mysql://${hspc.platform.api.fhir.db.host}:${DB_PORT:3306}/${hspc.platform.api.fhir.db.schema}
          username: ${DB_USER:root}
          password: ${DB_PASSWORD:password}
          emptySchemaScriptPattern: db/mysql/hspc_%s_schema_empty.sql
          starterSchemaScriptPattern: db/mysql/hspc_%s_%s_%s_dataset.sql
          # Comma-separated list of scripts to run in order
          initializationScripts: db/mysql/V1__convert_hapi_3.2.0_to_3.3.0.sql
        data-source:
          cache:
            size: 10
        defaultTenantId: ${hspc.platform.api.sandbox.name}
        templateSandboxes: MasterDstu2Empty, MasterDstu2Smart, MasterStu3Empty, MasterStu3Smart, MasterR4Empty, MasterR4Smart
        hibernate:
          dialect: org.hibernate.dialect.MySQL5Dialect
        terminology:
          proxy:
            host: api-v5-stu3.hspconsortium.org/${hspc.platform.api.sandbox.name}
            contextPath: /open
        contextPath: data
        # remove openContextPath to disable the open endpoint
        openContextPath: open
    # these values are used for internal calls to the auth server
    authorization:
      protocol: http
      host: ${AUTH_HOST:localhost}
      port: ${AUTH_PORT:8060}
      context: ~
      url: ${hspc.platform.authorization.protocol}://${hspc.platform.authorization.host}:${hspc.platform.authorization.port}${hspc.platform.authorization.context}
      authorizeUrlPath: /authorize
      tokenUrlPath: /token
      tokenCheckUrlPath: /introspect
      userinfoUrlPath: /userinfo
      smart:
        launchUrlPath: /Launch
        registrationEndpointUrlPath: /register
        urisEndpointExtensionUrl: http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris
        launchRegistrationUrl: /${hspc.platform.api.fhir.contextPath}/_services/smart/Launch
    # the manifest output should contain these values (used to allow the API to publish different auth URL than it resolves locally, ie, Docker container)
    manifest:
      override: ${MANIFEST_OVERRIDE:false}
      protocol: http
      host: ${PUBLISHED_AUTH_HOST:}
      port: ${PUBLISHED_AUTH_PORT:}
      context: ~
      url: ${hspc.platform.manifest.protocol}://${hspc.platform.manifest.host}:${hspc.platform.manifest.port}${hspc.platform.manifest.context}
    messaging:
      pubsub:
        enabled: false
        forSandboxes:
        subscription:
          channel:
            endpoint:
        includeSourceQueryParameter: true

---

spring:
  profiles: dstu2

hspc:
  platform:
    api:
      sandbox:
        name: ${SANDBOX_NAME:hspc8}
server:
  port: ${API_PORT:8071}

---

spring:
  profiles: stu3

hspc:
  platform:
    api:
      sandbox:
        name: ${SANDBOX_NAME:hspc9}
server:
  port: ${API_PORT:8072}

---

spring:
  profiles: r4

hspc:
  platform:
    api:
      sandbox:
        name: ${SANDBOX_NAME:hspc10}
server:
  port: ${API_PORT:8073}
