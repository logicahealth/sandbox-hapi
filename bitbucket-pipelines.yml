# This project uses the GitFlow Workflow as defined here:
#   https://www.atlassian.com/git/tutorials/comparing-workflows#GitFlow-workflow
image: hspconsortium/hspc-ubuntu-base
clone:           # the 'clone' section
  depth: 1       # the depth, in this case the clone will contain last one commits

pipelines:
  default:
    - step:
        script:
          - echo "Please use a GitFlow branch"
          - exit 1;
  branches:
    develop:
      - step:
          name: build the source code
          caches:
            - maven
          script:
            - mvn -V -B -s settings.xml deploy -P DEPLOY-HSPC,hspc-nexus
            - rm reference-api-webapp-multitenant/target/*-sources.jar
            - rm reference-api-webapp-multitenant/target/*-javadoc.jar
          artifacts:
            - reference-api-webapp-multitenant/target/*.jar
      - step:
          name: build docker and upload to docker hub
          caches:
            - node
          script:
            - export ACTIVE_ENV=test
            - export PROJECT_NAME=bilirubin-cdshooks
            - cd ci
            - . ci-0-set-properties.sh
            - . ci-1-prepare-sources.sh
            - . ci-2-docker-image.sh
      - step:
          name: update the aws task definition
          caches:
            - node
          script:
            - export ACTIVE_ENV=test
            - export PROJECT_NAME=bilirubin-cdshooks
            - cd ci
            - . ci-0-set-properties.sh
            - . ci-3-aws-task-update.sh
      - step:
          name: update the aws service
          caches:
            - node
          script:
            - export ACTIVE_ENV=test
            - export PROJECT_NAME=bilirubin-cdshooks
            - . ci/ci-0-set-properties.sh
            - . ci/ci-4-aws-service-update.sh
    master:
      - step:
          name: build the source code
          caches:
            - maven
          script:
            - mvn -V -B -s settings.xml deploy -P DEPLOY-HSPC,hspc-nexus
            - rm reference-api-webapp-multitenant/target/*-sources.jar
            - rm reference-api-webapp-multitenant/target/*-javadoc.jar
          artifacts:
            - reference-api-webapp-multitenant/target/*.jar
      - step:
          name: build docker and upload to docker hub
          caches:
            - node
          script:
            - export ACTIVE_ENV=prod
            - export PROJECT_NAME=bilirubin-cdshooks
            - cd ci
            - . ci-0-set-properties.sh
            - . ci-1-prepare-sources.sh
            - . ci-2-docker-image.sh
      - step:
          name: update the aws task definition
          caches:
            - node
          script:
            - export ACTIVE_ENV=prod
            - export PROJECT_NAME=bilirubin-cdshooks
            - cd ci
            - . ci-0-set-properties.sh
            - . ci-3-aws-task-update.sh
      - step:
          name: update the aws service
          caches:
            - node
          trigger: manual
          script:
            - export ACTIVE_ENV=prod
            - export PROJECT_NAME=bilirubin-cdshooks
            - . ci/ci-0-set-properties.sh
            - . ci/ci-4-aws-service-update.sh
    feature/*:
      - step:
          name: build the source code
          caches:
            - node
          script:
            - echo "success"
    release/*:
      - step:
          name: build the source code
          caches:
            - node
          script:
            - echo "success"
    hotfix/*:
      - step:
          name: build the source code
          caches:
            - node
          script:
            - echo "success"
options:
  docker: true